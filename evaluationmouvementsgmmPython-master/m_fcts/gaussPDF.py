import numpy as np


def gaussPDF(Data, Mu, Sigma):
    """
    Likelihood of datapoint(s) to be generated by a Gaussian parameterized by center and covariance.

    :param Data:  (D * N) array representing N datapoints of D dimensions.
    :param Mu:    D array representing the center of the Gaussian.    (1 dimension)
    :param Sigma: (D * D) array representing the covariance matrix of the Gaussian.

    :return:      N vector representing the likelihood of the N datapoints. (1 dimension)
    """
    nbVar, nbData = Data.shape
    Data = Data.T - Mu  # Mu is 1-dimension, no need to inverse
    prob = np.sum(np.dot(Data, np.linalg.inv(Sigma)) * Data, axis=1)
    prob = np.exp(-0.5*prob) / np.sqrt((2*np.pi)**nbVar * np.abs(np.linalg.det(Sigma)) + np.finfo(float).tiny)
    return prob
